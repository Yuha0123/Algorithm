# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def mergeTwoLists(self, l1: ListNode, l2: ListNode) -> ListNode:
        cur_node1 = l1
        cur_node2 = l2
        
        result_node = ListNode()
        cur_result = result_node
        
        while cur_node1 or cur_node2:
            if cur_node1 and cur_node2:
                if cur_node1.val <= cur_node2.val:
                    cur_result.next = ListNode(cur_node1.val)
                    cur_node1 = cur_node1.next
                else:
                    cur_result.next = ListNode(cur_node2.val)
                    cur_node2 = cur_node2.next
                    
            elif cur_node1:
                cur_result.next = ListNode(cur_node1.val)
                cur_node1 = cur_node1.next
            else:
                cur_result.next = ListNode(cur_node2.val)
                cur_node2 = cur_node2.next
                
            cur_result = cur_result.next
            
        result_node = result_node.next
        
        return result_node
