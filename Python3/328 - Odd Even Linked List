# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def oddEvenList(self, head: ListNode) -> ListNode:
        
        
        result_head = head
        result_cur = head
        
        if head is not None and head.next is not None:
            cur_node = head.next
            head = head.next
        else:
            return head
            
        
        while cur_node and cur_node.next:
            prev = cur_node             #even_node
            cur_node = cur_node.next    #odd_node
            
            prev.next = cur_node.next
            result_cur.next = cur_node
            result_cur = result_cur.next
            cur_node = cur_node.next
            
        result_cur.next = head
        
        
        return result_head
