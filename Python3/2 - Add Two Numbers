# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def addTwoNumbers(self, l1: ListNode, l2: ListNode) -> ListNode:
        result_head = ListNode(0)
        cur_node = result_head
        carry = 0
        
        while l1 is not None or l2 is not None or carry:
            if l1 is not None and l2 is not None:
                sum_val = l1.val + l2.val + carry
                l1, l2 = l1.next, l2.next
            elif l1 is not None:
                sum_val = l1.val + carry
                l1 = l1.next
            elif l2 is not None:
                sum_val = l2.val + carry
                l2 = l2.next
            else:
                sum_val = carry
                
            if  sum_val> 9:
                carry = 1
                cur_node.next = ListNode(sum_val - 10)
            else:
                carry = 0
                cur_node.next = ListNode(sum_val)
                
            cur_node = cur_node.next
                
        return result_head.next
