# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    
    def isPalindrome(self, head: ListNode) -> bool:
        def checkPalindrome(left_head: ListNode, right_head: ListNode) -> bool:
    
            while left_head is not None and right_head is not None:
                if left_head.val == right_head.val:
                    left_head = left_head.next
                    right_head = right_head.next
                else:
                    return False
                
            if left_head == right_head:
                return True
            else:
                return False


    
    
    
        if head.next is None:
            return True
        else:
            left_head = head
            right_head = head.next
            left_head.next = None

        while right_head is not None:
            if checkPalindrome(left_head, right_head):
                return True
            elif right_head.next is not None and checkPalindrome(left_head, right_head.next):
                return True
            else:
                temp = right_head
                right_head =  right_head.next
                temp.next = left_head
                left_head = temp

        return False

