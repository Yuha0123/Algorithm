class Solution:
    def trap(self, height: List[int]) -> int:
        
        if len(height) < 3:
            return 0
        
        
        num_trap = 0
    
        #index of local maximum value
        left = 0
        right = len(height) - 1
        
        #local maximum value
        left_max = height[0]
        right_max = height[right]
        
        while(left < right):
            
            #find maximum height with two pointers
            if(left_max < right_max):
                num_trap = num_trap + (left_max - height[left])
                left = left + 1
                left_max = max(height[left], left_max)
            else:
                num_trap = num_trap + (right_max - height[right])
                right = right - 1
                right_max = max(height[right], right_max)
        
            
        return num_trap
        
