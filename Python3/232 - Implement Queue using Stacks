class MyQueue:

    def __init__(self):
        """
        Initialize your data structure here.
        """
        self.input_stack = []
        self.output_stack = []
        self.is_pop = False

    def push(self, x: int) -> None:
        """
        Push element x to the back of queue.
        """
        if self.is_pop == True:
            self.input_stack = []
            
            while len(self.output_stack) > 0:
                self.input_stack.append(self.output_stack.pop())
            
            self.is_pop = False
            
        self.input_stack.append(x)
        
        
        
    def pop(self) -> int:
        """
        Removes the element from in front of queue and returns that element.
        """
        if self.is_pop == False:
            self.is_pop = True
            while len(self.input_stack) > 0:
                self.output_stack.append(self.input_stack.pop())
                
        return self.output_stack.pop()
        
        

    def peek(self) -> int:
        """
        Get the front element.
        """
        if self.is_pop == False:
            self.is_pop = True
            while len(self.input_stack) > 0:
                self.output_stack.append(self.input_stack.pop())
                
        return self.output_stack[-1]
        
        

    def empty(self) -> bool:
        """
        Returns whether the queue is empty.
        """
        if len(self.input_stack) > 0 or len(self.output_stack) > 0:
            return False
        else:
            return True


# Your MyQueue object will be instantiated and called as such:
# obj = MyQueue()
# obj.push(x)
# param_2 = obj.pop()
# param_3 = obj.peek()
# param_4 = obj.empty()
